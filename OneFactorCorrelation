install.packages("googleAnalyticsR", dependencies=TRUE)
library(googleAnalyticsR)
install.packages("stringr")
library(stringr)
install.packages("dplyr")
library(dplyr)

install.packages("plyr")
library(plyr)

#authorizes R to establish a connection with our GA account
ga_auth()

#brand view ID
ga_id <- 186738676

#test query
google_analytics(ga_id, 
                 date_range = c("2019-12-01", "2020-01-01"), 
                 metrics = "sessions", 
                 dimensions = c("year","month","hostname"))

test <- ga_filter_view_list(1341196, "UA-1341196-19", 186738676)

#create a dataframe that contains all the segments IDs that we will be pulling
all.segments <- as.data.frame(ga_segment_list())

hev.segments.allfields <- subset(all.segments,grepl("HEV",name))

hev.segments <- select(hev.segments.allfields,id,segmentId,name)

#test query with segment and unsampled data
test <- segment_ga4("FCA 2020 HEV 4x4  Story module clicks", segment_id = "gaid::nfqCa3bSQGWRCsIAksdv3w")

test_segment <- google_analytics(ga_id, 
                                   date_range = c("2019-12-01", "2020-01-01"), 
                                   metrics = "sessions", 
                                   dimensions = c("year","month","hostname"),
                                   segments = test,
                                   filtersExpression = "ga:hostname==www.jeep.ca",
                                   anti_sample = TRUE)

#start querying the GA reporting API against all hev segments by brand, so that we can look at one to one correlation first

list.brandhevsegments <- list()
list.hevnames <- list()

#jeep query
i=1
#after testing, change 1:3 to 1:nrow(hev.segments)
for (i in 1:3){
  segmentdata <- google_analytics(ga_id, 
                           date_range = c("2019-01-01", "2020-02-29"), 
                           metrics = "sessions", 
                           dimensions = c("year","month"),
                           segments = segment_ga4(hev.segments$name[i], segment_id = hev.segments$segmentId[i]),
                           filtersExpression = "ga:hostname==www.jeep.ca",
                           anti_sample = TRUE)
  
    segmentname <- paste0("jeep","hevsegment", i)
    segmentdata <- as.data.frame(segmentdata)
    newsegment <- assign(segmentname, segmentdata)
    
    list.brandhevsegments <- append(list.brandhevsegments,newsegment$segment[1])
    list.hevnames <- append(list.hevnames,segmentname)
    
  i = i+1
}

list.hevnames <- do.call(rbind, list.hevnames)
colnames(list.hevnames) <- c("hev.segment")

#check that the number of rows in our hev.segment list is the same as the number of segments we've pulled via the api
stopifnot(length(list.brandhevsegments)==length(list.hevnames))


#for each hev segment, calculate some basic statistics (min, max, average, variance, 
#number of data points, number of extreme outliers, shapiro wilk statistic)
#pearson correlation coefficient has the following assumptions: 
#normality of variables, linearity, and homoscedasticity
#to test the normality of our hev segments, we will use the shapiro wilk test

